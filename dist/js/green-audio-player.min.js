! function (e) {
    if ("object" == typeof exports && "undefined" != typeof module) module.exports = e();
    else if ("function" == typeof define && define.amd) define([], e);
    else {
        ("undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this).GreenAudioPlayer = e()
    }
}(function () {
    return function n(l, r, o) {
        function u(t, e) {
            if (!r[t]) {
                if (!l[t]) {
                    var i = "function" == typeof require && require;
                    if (!e && i) return i(t, !0);
                    if (d) return d(t, !0);
                    var s = new Error("Cannot find module '" + t + "'");
                    throw s.code = "MODULE_NOT_FOUND", s
                }
                var a = r[t] = {
                    exports: {}
                };
                l[t][0].call(a.exports, function (e) {
                    return u(l[t][1][e] || e)
                }, a, a.exports, n, l, r, o)
            }
            return r[t].exports
        }
        for (var d = "function" == typeof require && require, e = 0; e < o.length; e++) u(o[e]);
        return u
    }({
        1: [function (e, t, i) {
            "use strict";
            t.exports = e("./src/js/main").default
        }, {
            "./src/js/main": 2
        }],
        2: [function (e, t, i) {
            "use strict";

            function n(e, t) {
                return function (e) {
                    if (Array.isArray(e)) return e
                }(e) || function (e, t) {
                    if (!(Symbol.iterator in Object(e) || "[object Arguments]" === Object.prototype.toString.call(e))) return;
                    var i = [],
                        s = !0,
                        a = !1,
                        n = void 0;
                    try {
                        for (var l, r = e[Symbol.iterator](); !(s = (l = r.next()).done) && (i.push(l.value), !t || i.length !== t); s = !0);
                    } catch (e) {
                        a = !0, n = e
                    } finally {
                        try {
                            s || null == r.return || r.return()
                        } finally {
                            if (a) throw n
                        }
                    }
                    return i
                }(e, t) || function () {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance")
                }()
            }

            function s(e, t) {
                for (var i = 0; i < t.length; i++) {
                    var s = t[i];
                    s.enumerable = s.enumerable || !1, s.configurable = !0, "value" in s && (s.writable = !0), Object.defineProperty(e, s.key, s)
                }
            }
            Object.defineProperty(i, "__esModule", {
                value: !0
            }), i.default = void 0;
            var a = function () {
                function u(e, t) {
                    ! function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, u), this.audioPlayer = "string" == typeof e ? document.querySelector(e) : e;
                    var i = t || {},
                        s = this.audioPlayer.innerHTML;
                    this.audioPlayer.classList.add("green-audio-player"), this.audioPlayer.innerHTML = u.getTemplate() + s, this.isDevice = /ipad|iphone|ipod|android/i.test(window.navigator.userAgent.toLowerCase()) && !window.MSStream, this.playPauseBtn = this.audioPlayer.querySelector(".play-pause-btn"), this.loading = this.audioPlayer.querySelector(".loading"), this.sliders = this.audioPlayer.querySelectorAll(".slider"), this.progress = this.audioPlayer.querySelector(".controls__progress"), this.volumeBtn = this.audioPlayer.querySelector(".volume__button"), this.volumeControls = this.audioPlayer.querySelector(".volume__controls"), this.volumeProgress = this.volumeControls.querySelector(".volume__progress"), this.player = this.audioPlayer.querySelector("audio"), this.currentTime = this.audioPlayer.querySelector(".controls__current-time"), this.totalTime = this.audioPlayer.querySelector(".controls__total-time"), this.speaker = this.audioPlayer.querySelector(".volume__speaker"), this.download = this.audioPlayer.querySelector(".download"), this.downloadLink = this.audioPlayer.querySelector(".download__link"), this.span = this.audioPlayer.querySelectorAll(".message__offscreen"), this.svg = this.audioPlayer.getElementsByTagName("svg"), this.img = this.audioPlayer.getElementsByTagName("img"), this.draggableClasses = ["pin"], this.currentlyDragged = null, this.stopOthersOnPlay = i.stopOthersOnPlay || !1, this.enableKeystrokes = i.enableKeystrokes || !1, this.showTooltips = i.showTooltips || !1;
                    var a = this;
                    if (this.labels = {
                        volume: {
                            open: "Open Volume Controls",
                            close: "Close Volume Controls"
                        },
                        pause: "Pause",
                        play: "Play",
                        download: "Download"
                    }, this.enableKeystrokes) {
                        window.addEventListener("keydown", this.pressKb.bind(a), !1), window.addEventListener("keyup", this.unPressKb.bind(a), !1), this.sliders[0].setAttribute("tabindex", 0), this.sliders[1].setAttribute("tabindex", 0), this.download.setAttribute("tabindex", -1), this.downloadLink.setAttribute("tabindex", -1);
                        for (var n = 0; n < this.svg.length; n++) this.svg[n].setAttribute("tabindex", 0), this.svg[n].setAttribute("focusable", !0);
                        for (var l = 0; l < this.img.length; l++) this.img[l].setAttribute("tabindex", 0)
                    } else
                        for (var r = 0; r < this.span.length; r++) this.span[r].outerHTML = "";
                    if (this.showTooltips && (this.playPauseBtn.setAttribute("title", this.labels.play), this.volumeBtn.setAttribute("title", this.labels.volume.open), this.downloadLink.setAttribute("title", this.labels.download)), i.outlineControls && this.audioPlayer.classList.add("player-accessible"), i.showDownloadButton && this.showDownload(), this.initEvents(), this.directionAware(), this.overcomeIosLimitations(), "autoplay" in this.player.attributes) {
                        var o = this.player.play();
                        void 0 !== o && o.then(function () {
                            a.player.parentElement.querySelector(".play-pause-btn__icon").attributes.d.value = "M0 0h6v24H0zM12 0h6v24h-6z", a.playPauseBtn.setAttribute("aria-label", a.labels.pause), a.hasSetAttribute(a.playPauseBtn, "title", a.labels.pause)
                        }).catch(function () {
                            console.error("Green Audio Player Error: Autoplay has been prevented, because it is not allowed by this browser.")
                        })
                    }
                    "preload" in this.player.attributes && "none" === this.player.attributes.preload.value && (this.playPauseBtn.style.visibility = "visible", this.loading.style.visibility = "hidden")
                }
                var e, t, i;
                return e = u, i = [{
                    key: "init",
                    value: function (t) {
                        document.querySelectorAll(t.selector).forEach(function (e) {
                            new u(e, t)
                        })
                    }
                }, {
                    key: "getTemplate",
                    value: function () {
                        return `
                        <div class="holder">
    <div class="loading">
        <div class="loading__spinner"></div>
    </div>
    <div class="play-pause-btn" aria-label="Play" role="button">
    <svg width="28" height="28" viewBox="0 0 28 28" fill="none" xmlns="http://www.w3.org/2000/svg">
            <g id="Vector">
                <path d="M14.0008 4.57764e-05C6.26928 4.57764e-05 0.00163269 6.26769 0.00163269 13.9992C0.00163269 21.7308 6.26928 27.9984 14.0008 27.9984C21.7324 27.9984 28 21.7308 28 13.9992C28 6.26769 21.7324 4.57764e-05 14.0008 4.57764e-05Z" fill="#124285" />
                <path fill-rule="evenodd" clip-rule="evenodd" d="M19.0189 14.115C19.0907 13.828 19.0287 13.5214 18.8982 13.2849C18.7531 13.0224 18.634 12.9555 18.3666 12.794C17.1255 12.0455 15.7735 11.31 14.4868 10.55C14.0563 10.2956 13.6404 10.0575 13.1903 9.80306C12.5869 9.46221 12.1449 9.56332 11.7502 9.9955C11.3964 10.3836 11.5105 11.2023 11.5105 11.7976C11.5105 12.8576 11.4176 17.411 11.6214 17.8105C11.8236 18.2084 12.3716 18.577 12.9864 18.2998L16.7504 15.9367C17.1728 15.6806 17.587 15.4181 17.9997 15.1441C18.44 14.8538 18.8705 14.6989 19.0189 14.1134V14.115Z" fill="white" />
            </g>
        </svg>
    </div>
</div>
<div class="controls">
    <div class="controls__slider slider" data-direction="horizontal">
        <div class="controls__progress gap-progress" aria-label="Time Slider" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0" role="slider">
            <div class="pin progress__pin" data-method="rewind"></div>
        </div>
    </div>
    <span class="controls__current-time" aria-live="off" role="timer">00:00</span>&nbsp;/&nbsp;<span class="controls__total-time">00:00</span>
</div>
<div class="volume">
    <div class="volume__button" aria-label="Open Volume Controls" role="button"> 
    
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none">
  <path fill-rule="evenodd" clip-rule="evenodd" d="M7.80984 0.029822C7.45308 0.128954 7.17136 0.499171 6.96015 0.712064L4.63711 3.03774C4.37431 3.29965 4.13463 3.54055 3.87271 3.80279C3.63717 4.03861 3.74013 4.00182 3.30043 4.00111C2.72918 4.00018 1.47419 3.94401 1.05341 4.10226C0.68127 4.24217 0.396221 4.49868 0.216695 4.82386C-0.018837 5.25041 0.0120837 5.5786 0.0120837 6.14031C0.0120837 6.79793 -0.0328523 10.3965 0.0505847 10.7431C0.278319 11.6888 0.987042 12.001 1.89154 12.0001C2.41109 11.9996 2.93216 12.0043 3.45149 11.9992C3.73774 11.9964 3.66586 11.9901 3.9478 12.2735L5.88125 14.2088C6.39338 14.7228 6.89918 15.262 7.42489 15.7542C7.7323 16.0419 8.18542 16.1036 8.53978 15.7958C8.87053 15.5085 8.80694 15.0502 8.80694 14.5117V2.11962C8.80694 1.79941 8.84359 0.829101 8.77864 0.595191C8.6784 0.2342 8.29089 -0.10381 7.8099 0.029822H7.80984Z" fill="#124285"/>
  <path fill-rule="evenodd" clip-rule="evenodd" d="M12.898 2.14249C12.259 2.32389 12.101 3.00711 12.5399 3.49278C12.9966 3.99811 13.112 4.10706 13.498 4.72129C14.7697 6.74536 14.6685 9.5768 13.3368 11.5359C13.0518 11.9553 12.4345 12.6065 12.365 12.7531C12.079 13.356 12.642 14.0398 13.2938 13.8625C13.9451 13.6854 14.9512 12.0253 15.2349 11.4226C16.5509 8.62702 16.1408 5.36505 14.2241 2.97693C13.8771 2.54453 13.4692 1.98026 12.898 2.14244V2.14249Z" fill="#124285"/>
  <path fill-rule="evenodd" clip-rule="evenodd" d="M10.6865 4.39589C10.3168 4.47684 10.0437 4.744 10.0307 5.1491C10.0162 5.603 10.364 5.82124 10.5425 6.0623C11.4748 7.321 11.4237 8.98604 10.3507 10.1672C10.1305 10.4096 9.8847 10.7169 10.1115 11.1753C10.2439 11.4429 10.5877 11.7215 11.033 11.5977C11.4984 11.4683 12.0649 10.6291 12.3154 10.0966C12.6356 9.41592 12.8314 8.67707 12.798 7.78942C12.7544 6.6298 12.2839 5.634 11.5971 4.82637C11.4213 4.6197 11.1448 4.29556 10.6865 4.39594V4.39589Z" fill="#124285"/>
</svg>

<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none">
  <path fill-rule="evenodd" clip-rule="evenodd" d="M7.80983 0.0297703C7.45304 0.128926 7.17132 0.499114 6.96017 0.712085L4.63711 3.03768C4.37431 3.2996 4.13468 3.5405 3.87268 3.80276C3.86103 3.81442 3.85019 3.8255 3.84004 3.83589L8.80686 8.80764V2.11954C8.80686 1.79933 8.84353 0.829017 8.77861 0.595153C8.6784 0.234199 8.29082 -0.103899 7.80983 0.0297703ZM1.76757 4.00188C1.46809 4.01573 1.20597 4.04494 1.05341 4.10231C0.68128 4.24221 0.396217 4.4987 0.216669 4.82387C-0.018924 5.25039 0.0120963 5.57856 0.0120963 6.14025C0.0120963 6.79786 -0.0328773 10.3964 0.0506121 10.743C0.278363 11.6887 0.986986 12.0009 1.89153 12C2.41104 11.9995 2.93215 12.0042 3.45142 11.9991C3.73764 11.9963 3.6658 11.99 3.94775 12.2733L5.88115 14.2086C6.39328 14.7226 6.89906 15.2619 7.42479 15.754C7.73222 16.0417 8.1853 16.1034 8.53967 15.7956C8.8704 15.5083 8.80686 15.0501 8.80686 14.5116V11.0482L1.76757 4.00188Z" fill="#124285"/>
  <path fill-rule="evenodd" clip-rule="evenodd" d="M12.8979 2.14255C12.259 2.32401 12.1009 3.00725 12.5399 3.49287C12.9965 3.99823 13.112 4.10708 13.4979 4.72141C14.7698 6.7455 14.6684 9.57691 13.3368 11.536C13.1302 11.8401 12.7489 12.2659 12.5285 12.533L13.651 13.6566C14.2659 13.1524 14.9994 11.9232 15.235 11.4228C16.551 8.62714 16.1409 5.36517 14.2242 2.97701C13.8772 2.5446 13.4691 1.98037 12.8979 2.14255Z" fill="#124285"/>
  <path fill-rule="evenodd" clip-rule="evenodd" d="M10.6865 4.39589C10.3168 4.47681 10.0437 4.74403 10.0308 5.14908C10.0163 5.60296 10.3641 5.82124 10.5426 6.06226C11.4749 7.32092 11.4238 8.98602 10.3508 10.1671C10.3219 10.199 10.2926 10.2319 10.264 10.266L11.3867 11.3899C11.7568 11.0758 12.1262 10.4986 12.3155 10.0964C12.6357 9.41566 12.8315 8.67678 12.7981 7.78923C12.7545 6.6296 12.284 5.63378 11.5972 4.82622C11.4214 4.61948 11.1448 4.29558 10.6865 4.39589Z" fill="#124285"/>
  <path d="M0.572977 1.68591C0.263927 1.37655 0.263927 0.875001 0.572977 0.565645C0.882026 0.256289 1.38308 0.256289 1.69213 0.565645L15.4271 14.3142C15.7361 14.6236 15.7361 15.1251 15.4271 15.4345C15.118 15.7438 14.617 15.7438 14.3079 15.4345L0.572977 1.68591Z" fill="#124285"/>
</svg>
    
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
            <path class="volume__speaker" fill="#566574" fill-rule="evenodd" d="M14.667 0v2.747c3.853 1.146 6.666 4.72 6.666 8.946 0 4.227-2.813 7.787-6.666 8.934v2.76C20 22.173 24 17.4 24 11.693 24 5.987 20 1.213 14.667 0zM18 11.693c0-2.36-1.333-4.386-3.333-5.373v10.707c2-.947 3.333-2.987 3.333-5.334zm-18-4v8h5.333L12 22.36V1.027L5.333 7.693H0z" />
        </svg>
    </div>
    <div class="volume__controls hidden">
        <div class="volume__slider slider" data-direction="vertical">
            <div class="volume__progress gap-progress" aria-label="Volume Slider" aria-valuemin="0" aria-valuemax="100" aria-valuenow="81" role="slider">
                <div class="pin volume__pin" data-method="changeVolume"></div>
            </div>
        </div>
    </div>
</div>
                        `
                    }
                }, {
                    key: "formatTime",
                    value: function (e) {
                        var t = Math.floor(e / 60),
                            i = Math.floor(e % 60);
                        return "".concat(t < 10 ? "0".concat(t) : t, ":").concat(i < 10 ? "0".concat(i) : i)
                    }
                }, {
                    key: "pausePlayer",
                    value: function (e) {
                        e.parentElement.querySelector(".play-pause-btn").innerHTML = `
                        <svg width="28" height="28" viewBox="0 0 28 28" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <g id="Vector">
                                <path d="M14.0008 4.57764e-05C6.26928 4.57764e-05 0.00163269 6.26769 0.00163269 13.9992C0.00163269 21.7308 6.26928 27.9984 14.0008 27.9984C21.7324 27.9984 28 21.7308 28 13.9992C28 6.26769 21.7324 4.57764e-05 14.0008 4.57764e-05Z" fill="#124285" />
                                <path fill-rule="evenodd" clip-rule="evenodd" d="M19.0189 14.115C19.0907 13.828 19.0287 13.5214 18.8982 13.2849C18.7531 13.0224 18.634 12.9555 18.3666 12.794C17.1255 12.0455 15.7735 11.31 14.4868 10.55C14.0563 10.2956 13.6404 10.0575 13.1903 9.80306C12.5869 9.46221 12.1449 9.56332 11.7502 9.9955C11.3964 10.3836 11.5105 11.2023 11.5105 11.7976C11.5105 12.8576 11.4176 17.411 11.6214 17.8105C11.8236 18.2084 12.3716 18.577 12.9864 18.2998L16.7504 15.9367C17.1728 15.6806 17.587 15.4181 17.9997 15.1441C18.44 14.8538 18.8705 14.6989 19.0189 14.1134V14.115Z" fill="white" />
                            </g>
                        </svg>
                        `
                        e.parentElement.classList.add('is_paused')
                        e.parentElement.classList.remove('is_playing')
                        e.pause()
                    }
                }, {
                    key: "playPlayer",
                    value: function (e) {
                        e.parentElement.querySelector(".play-pause-btn").innerHTML = `
                        <svg width="28" height="28" viewBox="0 0 28 28" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <g id="Vector">
                                <path d="M14 28C21.732 28 28 21.732 28 14C28 6.26801 21.732 0 14 0C6.26801 0 0 6.26801 0 14C0 21.732 6.26801 28 14 28Z" fill="#124285" />
                                <path d="M13.1105 10.4107C13.1105 9.69427 12.5877 9.11348 11.9426 9.11348C11.2976 9.11348 10.7747 9.69427 10.7747 10.4107V17.5879C10.7747 18.3044 11.2976 18.8852 11.9426 18.8852C12.5877 18.8852 13.1105 18.3044 13.1105 17.5879V10.4107Z" fill="white" />
                                <path d="M17.2239 10.4107C17.2239 9.69427 16.701 9.11348 16.056 9.11348C15.411 9.11348 14.8881 9.69427 14.8881 10.4107V17.5879C14.8881 18.3044 15.411 18.8852 16.056 18.8852C16.701 18.8852 17.2239 18.3044 17.2239 17.5879V10.4107Z" fill="white" />
                            </g>
                        </svg>
                        `
                        e.parentElement.classList.add('is_playing')
                        e.parentElement.classList.remove('is_paused')
                        e.play()
                    }
                }, {
                    key: "stopOtherPlayers",
                    value: function () {
                        for (var e = document.querySelectorAll(".green-audio-player audio"), t = 0; t < e.length; t++) u.pausePlayer(e[t])
                    }
                }], (t = [{
                    key: "initEvents",
                    value: function () {
                        var a = this;
                        a.audioPlayer.addEventListener("mousedown", function (e) {
                            if (a.isDraggable(e.target)) {
                                a.currentlyDragged = e.target;
                                var t = a.currentlyDragged.dataset.method,
                                    i = a[t].bind(a);
                                window.addEventListener("mousemove", i, !1), a.currentlyDragged.parentElement.parentElement === a.sliders[0] && (a.paused = a.player.paused, !1 === a.paused && a.togglePlay()), window.addEventListener("mouseup", function () {
                                    !1 !== a.currentlyDragged && a.currentlyDragged.parentElement.parentElement === a.sliders[0] && a.paused !== a.player.paused && a.togglePlay(), a.currentlyDragged = !1, window.removeEventListener("mousemove", i, !1)
                                }, !1)
                            }
                        }), a.audioPlayer.addEventListener("touchstart", function (e) {
                            if (a.isDraggable(e.target)) {
                                var t = n(e.targetTouches, 1);
                                a.currentlyDragged = t[0];
                                var i = a.currentlyDragged.target.dataset.method,
                                    s = a[i].bind(a);
                                window.addEventListener("touchmove", s, !1), a.currentlyDragged.parentElement.parentElement === a.sliders[0] && (a.paused = a.player.paused, !1 === a.paused && a.togglePlay()), window.addEventListener("touchend", function () {
                                    !1 !== a.currentlyDragged && a.currentlyDragged.parentElement.parentElement === a.sliders[0] && a.paused !== a.player.paused && a.togglePlay(), a.currentlyDragged = !1, window.removeEventListener("touchmove", s, !1)
                                }, !1), e.preventDefault()
                            }
                        }), this.playPauseBtn.addEventListener("click", this.togglePlay.bind(a)), this.player.addEventListener("timeupdate", this.updateProgress.bind(a)), this.player.addEventListener("volumechange", this.updateVolume.bind(a)), this.player.volume = .81, this.player.addEventListener("loadedmetadata", function () {
                            a.totalTime.textContent = u.formatTime(a.player.duration)
                        }), this.player.addEventListener("seeking", this.showLoadingIndicator.bind(a)), this.player.addEventListener("seeked", this.hideLoadingIndicator.bind(a)), this.player.addEventListener("canplay", this.hideLoadingIndicator.bind(a)), this.player.addEventListener("ended", function () {
                            u.pausePlayer(a.player, "ended"), a.player.currentTime = 0, a.playPauseBtn.setAttribute("aria-label", a.labels.play), a.hasSetAttribute(a.playPauseBtn, "title", a.labels.play)
                        }), this.volumeBtn.addEventListener("click", this.showHideVolume.bind(a)), window.addEventListener("resize", a.directionAware.bind(a)), window.addEventListener("scroll", a.directionAware.bind(a));
                        for (var e = 0; e < this.sliders.length; e++) {
                            var t = this.sliders[e].querySelector(".pin");
                            this.sliders[e].addEventListener("click", a[t.dataset.method].bind(a))
                        }
                        // this.downloadLink.addEventListener("click", this.downloadAudio.bind(a))
                    }
                }, {
                    key: "overcomeIosLimitations",
                    value: function () {
                        this.isDevice && (this.player.addEventListener("loadedmetadata", this.hideLoadingIndicator.bind(this)), this.audioPlayer.querySelector(".volume").style.display = "none", this.audioPlayer.querySelector(".controls").style.marginRight = "0")
                    }
                }, {
                    key: "isDraggable",
                    value: function (e) {
                        var t = !1;
                        if (void 0 === e.classList) return !1;
                        for (var i = 0; i < this.draggableClasses.length; i++) e.classList.contains(this.draggableClasses[i]) && (t = !0);
                        return t
                    }
                }, {
                    key: "inRange",
                    value: function (e) {
                        var t = "touches" in e,
                            i = this.getRangeBox(e),
                            s = i.getBoundingClientRect(),
                            a = null,
                            n = null;
                        if ("horizontal" === i.dataset.direction) {
                            n = (a = s.x) + s.width;
                            var l = t ? e.touches[0].clientX : e.clientX;
                            if (l < a || n < l) return !1
                        } else {
                            n = (a = s.top) + s.height;
                            var r = t ? e.touches[0].clientY : e.clientY;
                            if (r < a || n < r) return !1
                        }
                        return !0
                    }
                }, {
                    key: "updateProgress",
                    value: function () {
                        var e = this.player.currentTime,
                            t = e / this.player.duration * 100;
                        this.progress.setAttribute("aria-valuenow", t), this.progress.style.width = "".concat(t, "%"), this.currentTime.textContent = u.formatTime(e)
                    }
                }, {
                    key: "updateVolume",
                    value: function () {
                        this.volumeBtn.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none"> <path fill-rule="evenodd" clip-rule="evenodd" d="M7.80984 0.029822C7.45308 0.128954 7.17136 0.499171 6.96015 0.712064L4.63711 3.03774C4.37431 3.29965 4.13463 3.54055 3.87271 3.80279C3.63717 4.03861 3.74013 4.00182 3.30043 4.00111C2.72918 4.00018 1.47419 3.94401 1.05341 4.10226C0.68127 4.24217 0.396221 4.49868 0.216695 4.82386C-0.018837 5.25041 0.0120837 5.5786 0.0120837 6.14031C0.0120837 6.79793 -0.0328523 10.3965 0.0505847 10.7431C0.278319 11.6888 0.987042 12.001 1.89154 12.0001C2.41109 11.9996 2.93216 12.0043 3.45149 11.9992C3.73774 11.9964 3.66586 11.9901 3.9478 12.2735L5.88125 14.2088C6.39338 14.7228 6.89918 15.262 7.42489 15.7542C7.7323 16.0419 8.18542 16.1036 8.53978 15.7958C8.87053 15.5085 8.80694 15.0502 8.80694 14.5117V2.11962C8.80694 1.79941 8.84359 0.829101 8.77864 0.595191C8.6784 0.2342 8.29089 -0.10381 7.8099 0.029822H7.80984Z" fill="#124285"/><path fill-rule="evenodd" clip-rule="evenodd" d="M12.898 2.14249C12.259 2.32389 12.101 3.00711 12.5399 3.49278C12.9966 3.99811 13.112 4.10706 13.498 4.72129C14.7697 6.74536 14.6685 9.5768 13.3368 11.5359C13.0518 11.9553 12.4345 12.6065 12.365 12.7531C12.079 13.356 12.642 14.0398 13.2938 13.8625C13.9451 13.6854 14.9512 12.0253 15.2349 11.4226C16.5509 8.62702 16.1408 5.36505 14.2241 2.97693C13.8771 2.54453 13.4692 1.98026 12.898 2.14244V2.14249Z" fill="#124285"/><path fill-rule="evenodd" clip-rule="evenodd" d="M10.6865 4.39589C10.3168 4.47684 10.0437 4.744 10.0307 5.1491C10.0162 5.603 10.364 5.82124 10.5425 6.0623C11.4748 7.321 11.4237 8.98604 10.3507 10.1672C10.1305 10.4096 9.8847 10.7169 10.1115 11.1753C10.2439 11.4429 10.5877 11.7215 11.033 11.5977C11.4984 11.4683 12.0649 10.6291 12.3154 10.0966C12.6356 9.41592 12.8314 8.67707 12.798 7.78942C12.7544 6.6298 12.2839 5.634 11.5971 4.82637C11.4213 4.6197 11.1448 4.29556 10.6865 4.39594V4.39589Z" fill="#124285"/></svg>`
                        if (this.player.volume === 0) {
                            this.volumeBtn.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M7.80983 0.0297703C7.45304 0.128926 7.17132 0.499114 6.96017 0.712085L4.63711 3.03768C4.37431 3.2996 4.13468 3.5405 3.87268 3.80276C3.86103 3.81442 3.85019 3.8255 3.84004 3.83589L8.80686 8.80764V2.11954C8.80686 1.79933 8.84353 0.829017 8.77861 0.595153C8.6784 0.234199 8.29082 -0.103899 7.80983 0.0297703ZM1.76757 4.00188C1.46809 4.01573 1.20597 4.04494 1.05341 4.10231C0.68128 4.24221 0.396217 4.4987 0.216669 4.82387C-0.018924 5.25039 0.0120963 5.57856 0.0120963 6.14025C0.0120963 6.79786 -0.0328773 10.3964 0.0506121 10.743C0.278363 11.6887 0.986986 12.0009 1.89153 12C2.41104 11.9995 2.93215 12.0042 3.45142 11.9991C3.73764 11.9963 3.6658 11.99 3.94775 12.2733L5.88115 14.2086C6.39328 14.7226 6.89906 15.2619 7.42479 15.754C7.73222 16.0417 8.1853 16.1034 8.53967 15.7956C8.8704 15.5083 8.80686 15.0501 8.80686 14.5116V11.0482L1.76757 4.00188Z" fill="#124285"/><path fill-rule="evenodd" clip-rule="evenodd" d="M12.8979 2.14255C12.259 2.32401 12.1009 3.00725 12.5399 3.49287C12.9965 3.99823 13.112 4.10708 13.4979 4.72141C14.7698 6.7455 14.6684 9.57691 13.3368 11.536C13.1302 11.8401 12.7489 12.2659 12.5285 12.533L13.651 13.6566C14.2659 13.1524 14.9994 11.9232 15.235 11.4228C16.551 8.62714 16.1409 5.36517 14.2242 2.97701C13.8772 2.5446 13.4691 1.98037 12.8979 2.14255Z" fill="#124285"/><path fill-rule="evenodd" clip-rule="evenodd" d="M10.6865 4.39589C10.3168 4.47681 10.0437 4.74403 10.0308 5.14908C10.0163 5.60296 10.3641 5.82124 10.5426 6.06226C11.4749 7.32092 11.4238 8.98602 10.3508 10.1671C10.3219 10.199 10.2926 10.2319 10.264 10.266L11.3867 11.3899C11.7568 11.0758 12.1262 10.4986 12.3155 10.0964C12.6357 9.41566 12.8315 8.67678 12.7981 7.78923C12.7545 6.6296 12.284 5.63378 11.5972 4.82622C11.4214 4.61948 11.1448 4.29558 10.6865 4.39589Z" fill="#124285"/><path d="M0.572977 1.68591C0.263927 1.37655 0.263927 0.875001 0.572977 0.565645C0.882026 0.256289 1.38308 0.256289 1.69213 0.565645L15.4271 14.3142C15.7361 14.6236 15.7361 15.1251 15.4271 15.4345C15.118 15.7438 14.617 15.7438 14.3079 15.4345L0.572977 1.68591Z" fill="#124285"/></svg>`
                        } else {
                            this.volumeBtn.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none"> <path fill-rule="evenodd" clip-rule="evenodd" d="M7.80984 0.029822C7.45308 0.128954 7.17136 0.499171 6.96015 0.712064L4.63711 3.03774C4.37431 3.29965 4.13463 3.54055 3.87271 3.80279C3.63717 4.03861 3.74013 4.00182 3.30043 4.00111C2.72918 4.00018 1.47419 3.94401 1.05341 4.10226C0.68127 4.24217 0.396221 4.49868 0.216695 4.82386C-0.018837 5.25041 0.0120837 5.5786 0.0120837 6.14031C0.0120837 6.79793 -0.0328523 10.3965 0.0505847 10.7431C0.278319 11.6888 0.987042 12.001 1.89154 12.0001C2.41109 11.9996 2.93216 12.0043 3.45149 11.9992C3.73774 11.9964 3.66586 11.9901 3.9478 12.2735L5.88125 14.2088C6.39338 14.7228 6.89918 15.262 7.42489 15.7542C7.7323 16.0419 8.18542 16.1036 8.53978 15.7958C8.87053 15.5085 8.80694 15.0502 8.80694 14.5117V2.11962C8.80694 1.79941 8.84359 0.829101 8.77864 0.595191C8.6784 0.2342 8.29089 -0.10381 7.8099 0.029822H7.80984Z" fill="#124285"/><path fill-rule="evenodd" clip-rule="evenodd" d="M12.898 2.14249C12.259 2.32389 12.101 3.00711 12.5399 3.49278C12.9966 3.99811 13.112 4.10706 13.498 4.72129C14.7697 6.74536 14.6685 9.5768 13.3368 11.5359C13.0518 11.9553 12.4345 12.6065 12.365 12.7531C12.079 13.356 12.642 14.0398 13.2938 13.8625C13.9451 13.6854 14.9512 12.0253 15.2349 11.4226C16.5509 8.62702 16.1408 5.36505 14.2241 2.97693C13.8771 2.54453 13.4692 1.98026 12.898 2.14244V2.14249Z" fill="#124285"/><path fill-rule="evenodd" clip-rule="evenodd" d="M10.6865 4.39589C10.3168 4.47684 10.0437 4.744 10.0307 5.1491C10.0162 5.603 10.364 5.82124 10.5425 6.0623C11.4748 7.321 11.4237 8.98604 10.3507 10.1672C10.1305 10.4096 9.8847 10.7169 10.1115 11.1753C10.2439 11.4429 10.5877 11.7215 11.033 11.5977C11.4984 11.4683 12.0649 10.6291 12.3154 10.0966C12.6356 9.41592 12.8314 8.67707 12.798 7.78942C12.7544 6.6298 12.2839 5.634 11.5971 4.82637C11.4213 4.6197 11.1448 4.29556 10.6865 4.39594V4.39589Z" fill="#124285"/></svg>`
                        }
                        this.volumeProgress.setAttribute("aria-valuenow", 100 * this.player.volume), this.volumeProgress.style.height = "".concat(100 * this.player.volume, "%")
                        // .5 <= this.player.volume ? this.speaker.attributes.d.value = "M14.667 0v2.747c3.853 1.146 6.666 4.72 6.666 8.946 0 4.227-2.813 7.787-6.666 8.934v2.76C20 22.173 24 17.4 24 11.693 24 5.987 20 1.213 14.667 0zM18 11.693c0-2.36-1.333-4.386-3.333-5.373v10.707c2-.947 3.333-2.987 3.333-5.334zm-18-4v8h5.333L12 22.36V1.027L5.333 7.693H0z" : this.player.volume < .5 && .05 < this.player.volume ? this.speaker.attributes.d.value = "M0 7.667v8h5.333L12 22.333V1L5.333 7.667M17.333 11.373C17.333 9.013 16 6.987 14 6v10.707c2-.947 3.333-2.987 3.333-5.334z" : this.player.volume <= .05 && (this.speaker.attributes.d.value = "M0 7.667v8h5.333L12 22.333V1L5.333 7.667")
                    }
                }, {
                    key: "getRangeBox",
                    value: function (e) {
                        var t = e.target,
                            i = this.currentlyDragged;
                        return "click" === e.type && this.isDraggable(e.target) && (t = e.target.parentElement.parentElement), "mousemove" === e.type && (t = i.parentElement.parentElement), "touchmove" === e.type && (t = i.target.parentElement.parentElement), t
                    }
                }, {
                    key: "getCoefficient",
                    value: function (e) {
                        var t = "touches" in e,
                            i = this.getRangeBox(e),
                            s = i.getBoundingClientRect(),
                            a = 0;
                        if ("horizontal" === i.dataset.direction) a = ((t ? e.touches[0].clientX : e.clientX) - s.left) / s.width;
                        else if ("vertical" === i.dataset.direction) {
                            var n = s.height;
                            a = 1 - ((t ? e.touches[0].clientY : e.clientY) - s.top) / n
                        }
                        return a
                    }
                }, {
                    key: "rewind",
                    value: function (e) {
                        this.player.seekable && this.player.seekable.length && this.inRange(e) && (this.player.currentTime = this.player.duration * this.getCoefficient(e))
                    }
                }, {
                    key: "showVolume",
                    value: function () {
                        this.volumeBtn.getAttribute("aria-attribute") === this.labels.volume.open && (this.volumeControls.classList.remove("hidden"), this.volumeBtn.classList.add("open"), this.volumeBtn.setAttribute("aria-label", this.labels.volume.close), this.hasSetAttribute(this.volumeBtn, "title", this.labels.volume.close))
                    }
                }, {
                    key: "showHideVolume",
                    value: function () {
                        this.volumeControls.classList.toggle("hidden"), this.volumeBtn.getAttribute("aria-label") === this.labels.volume.open ? (this.volumeBtn.setAttribute("aria-label", this.labels.volume.close), this.hasSetAttribute(this.volumeBtn, "title", this.labels.volume.close), this.volumeBtn.classList.add("open")) : (this.volumeBtn.setAttribute("aria-label", this.labels.volume.open), this.hasSetAttribute(this.volumeBtn, "title", this.labels.volume.open), this.volumeBtn.classList.remove("open"))
                    }
                }, {
                    key: "changeVolume",
                    value: function (e) {
                        this.inRange(e) && (this.player.volume = Math.round(50 * this.getCoefficient(e)) / 50)
                    }
                }, {
                    key: "preloadNone",
                    value: function () {
                        this.player.duration || (this.playPauseBtn.style.visibility = "hidden", this.loading.style.visibility = "visible")
                    }
                }, {
                    key: "togglePlay",
                    value: function () {
                        this.preloadNone(), this.player.paused ? (this.stopOthersOnPlay && u.stopOtherPlayers(), u.playPlayer(this.player), this.playPauseBtn.setAttribute("aria-label", this.labels.pause), this.hasSetAttribute(this.playPauseBtn, "title", this.labels.pause)) : (u.pausePlayer(this.player, "toggle"), this.playPauseBtn.setAttribute("aria-label", this.labels.play), this.hasSetAttribute(this.playPauseBtn, "title", this.labels.play))
                    }
                }, {
                    key: "hasSetAttribute",
                    value: function (e, t, i) {
                        this.showTooltips && e.hasAttribute(t) && e.setAttribute(t, i)
                    }
                }, {
                    key: "setCurrentTime",
                    value: function (e) {
                        var t = this.player.currentTime,
                            i = Math.floor(this.player.duration);
                        t + e < 0 && 0 === t ? this.player.currentTime = this.player.currentTime : t + e < 0 ? this.player.currentTime = 0 : i < t + e ? this.player.currentTime = i : this.player.currentTime += e
                    }
                }, {
                    key: "setVolume",
                    value: function (e) {
                        if (!this.isDevice) {
                            var t = this.player.volume;
                            0 <= t + e && t + e < 1 ? this.player.volume += e : this.player.volume = t + e <= 0 ? 0 : 1
                        }
                    }
                }, {
                    key: "unPressKb",
                    value: function (e) {
                        var t = e || window.event;
                        !this.seeking || 37 !== t.keyCode && 39 !== t.keyCode || (this.togglePlay(), this.seeking = !1)
                    }
                }, {
                    key: "pressKb",
                    value: function (e) {
                        var t = e || window.event;
                        switch (t.keyCode) {
                            case 13:
                            case 32:
                                if (document.activeElement.parentNode === this.playPauseBtn) this.togglePlay();
                                else if (document.activeElement.parentNode === this.volumeBtn || document.activeElement === this.sliders[1]) {
                                    if (document.activeElement === this.sliders[1]) try {
                                        this.volumeBtn.children[0].focus()
                                    } catch (e) {
                                        this.volumeBtn.focus()
                                    }
                                    this.showHideVolume()
                                }
                                13 === t.keyCode && this.showDownload && document.activeElement.parentNode === this.downloadLink && this.downloadLink.focus();
                                break;
                            case 37:
                            case 39:
                                document.activeElement === this.sliders[0] && (37 === t.keyCode ? this.setCurrentTime(-5) : this.setCurrentTime(5), !this.player.paused && this.player.seeking && (this.togglePlay(), this.seeking = !0));
                                break;
                            case 38:
                            case 40:
                                document.activeElement.parentNode !== this.volumeBtn && document.activeElement !== this.sliders[1] || (38 === t.keyCode ? this.setVolume(.05) : this.setVolume(-.05)), document.activeElement.parentNode === this.volumeBtn && this.showVolume()
                        }
                    }
                }, {
                    key: "showLoadingIndicator",
                    value: function () {
                        this.playPauseBtn.style.visibility = "hidden", this.loading.style.visibility = "visible"
                    }
                }, {
                    key: "hideLoadingIndicator",
                    value: function () {
                        this.playPauseBtn.style.visibility = "visible", this.loading.style.visibility = "hidden"
                    }
                }, {
                    key: "showDownload",
                    value: function () {
                        this.download.style.display = "block"
                    }
                }, {
                    key: "downloadAudio",
                    value: function () {
                        var e = this.player.currentSrc,
                            t = e.split("/").reverse()[0];
                        this.downloadLink.setAttribute("href", e), this.downloadLink.setAttribute("download", t)
                    }
                }, {
                    key: "directionAware",
                    value: function () {
                        this.volumeControls.classList.remove("top", "middle", "bottom"), window.innerHeight < 250 ? this.volumeControls.classList.add("middle") : this.audioPlayer.getBoundingClientRect().top < 180 ? this.volumeControls.classList.add("bottom") : this.volumeControls.classList.add("top")
                    }
                }]) && s(e.prototype, t), i && s(e, i), u
            }();
            i.default = a
        }, {}]
    }, {}, [1])(1)
});